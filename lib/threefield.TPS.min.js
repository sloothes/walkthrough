THREEFIELD.CharacterController=function(a,b,c){THREE.EventDispatcher.prototype.apply(this),this.object=a,this.position=(new THREE.Vector3).copy(this.object.position),this.radius=b,this.world=c,this.maxSlopeGradient=Math.cos(THREE.Math.degToRad(50)),this.isIdling=!1,this.isGrounded=!1,this.isOnSlope=!1,this.isWalking=!1,this.isJumping=!1,this.frontAngle=0,this.movementSpeed=15,this.velocity=new THREE.Vector3(0,-10,0),this.currentJumpPower=0,this.groundPadding=1,this.groundHeight=0,this.groundNormal=new THREE.Vector3,this.contactInfo=[],this._previouseMosion={isGounded:null,isSlope:null,isWalking:null,isJumping:null},c.addCharacter(this)},THREEFIELD.CharacterController.prototype.update=function(a){this._updateVelocity(),this._updateGrounding(),this._updatePosition(a),this._eventEmitter(),this._previouseMosion={isGrounded:this.isGrounded,isSlope:this.isOnSlope,isWalking:this.isWalking,isJumping:this.isJumping}},THREEFIELD.CharacterController.prototype._eventEmitter=function(){this._previouseMosion.isWalking||this.isWalking||!this.isGrounded||this.isIdling?!this._previouseMosion.isWalking&&this.isWalking&&!this.isJumping||!this._previouseMosion.isGrounded&&this.isGrounded&&this.isWalking||this._previouseMosion.isSlope&&!this.isOnSlope&&this.isWalking?(this.isIdling=!1,this.dispatchEvent({type:"startWalking"})):!this._previouseMosion.isJumping&&this.isJumping&&(this.isIdling=!1,this.dispatchEvent({type:"startJumping"})):(this.isIdling=!0,this.dispatchEvent({type:"startIdling"})),!this._previouseMosion.isGrounded&&this.isGrounded&&this.dispatchEvent({type:"endJumping"})},THREEFIELD.CharacterController.prototype._updateVelocity=function(){var a,b,c,d,e,f,g,h,i=-20,j=-Math.cos(THREE.Math.degToRad(this.frontAngle)),k=-Math.sin(THREE.Math.degToRad(this.frontAngle));if(this.velocity.x=k*this.movementSpeed*this.isWalking,this.velocity.y=i,this.velocity.z=j*this.movementSpeed*this.isWalking,0!==this.contactInfo.length||this.isJumping)for(!this.isGrounded||this.isOnSlope||this.isJumping?this.isGrounded&&this.isOnSlope&&!this.isJumping?(this.velocity.x=this.groundNormal.x*this.movementSpeed,this.velocity.y=1-this.groundNormal.y,this.velocity.z=this.groundNormal.z*this.movementSpeed):this.isGrounded||this.isOnSlope||!this.isJumping||(this.velocity.y=this.currentJumpPower*-i):this.velocity.y=0,c=new THREE.Vector2(k,j),e=Math.atan2(c.y,c.x),f=Math.atan2(-c.y,-c.x),g=0,h=this.contactInfo.length;h>g;g++)a=this.contactInfo[g].normal,this.maxSlopeGradient<a.y||this.isOnSlope||(b=new THREE.Vector2(a.x,a.z).normalize(),d=Math.atan2(b.y,b.x),Math.abs(f-d)>=.5*Math.PI&&Math.abs(f-d)<=1.5*Math.PI||(b.set(c.dot(b)*b.x,c.dot(b)*b.y),c.subVectors(c,b),this.velocity.x=c.x*this.movementSpeed*this.isWalking,this.velocity.z=c.y*this.movementSpeed*this.isWalking))},THREEFIELD.CharacterController.prototype._updateGrounding=function(){var a,b,c,d,e,f,g;for(this.isOnSlope=!1,a=0<this.currentJumpPower&&this.isJumping?-this.radius:this.groundPadding,b=new THREE.Vector3(this.position.x,this.position.y+this.radius,this.position.z),c=new THREE.Raycaster(b,new THREE.Vector3(0,-1,0),0,2*this.radius+a),d=[],f=0,g=this.world.colliders.length;g>f;f++)d.push(this.world.colliders[f].mesh);return e=c.intersectObjects(d),0===e.length?(this.isGrounded=!1,void this.groundNormal.set(0,0,0)):(this.isGrounded=!0,this.isJumping=!1,this.groundHeight=e[0].point.y,this.groundNormal.copy(e[0].face.normal),void(e[0].face.normal.y<=this.maxSlopeGradient&&(this.isOnSlope=!0)))},THREEFIELD.CharacterController.prototype._updatePosition=function(a){var b=this.position.x+this.velocity.x*a,c=this.position.y+this.velocity.y*a,d=this.position.z+this.velocity.z*a;this.isGrounded&&(c=this.groundHeight+this.radius),this.position.set(b,c,d)},THREEFIELD.CharacterController.prototype.fixPosition=function(){var a,b,c,d,e,f,g,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3;if(0===this.contactInfo.length&&!this.isJumping)return void this.object.position.copy(this.position);for(f=0,g=this.contactInfo.length;g>f;f++)if(a=this.contactInfo[f].face,b=this.contactInfo[f].normal,c=this.contactInfo[f].distance,!(this.maxSlopeGradient<b.y||this.isOnSlope))if(0>c&&this.isGrounded){if(h.copy(b).multiplyScalar(-this.radius).add(this.position),j.set(b.x,0,b.z).normalize(),d=a.a.dot(b),e=(d-(b.x*h.x+b.y*h.y+b.z*h.z))/(b.x*j.x+b.y*j.y+b.z*j.z),1/0===Math.abs(e))continue;i.copy(j).multiplyScalar(e).add(h),k.subVectors(i,h),Math.abs(l.x)>Math.abs(k.x)&&(l.x+=k.x),Math.abs(l.z)>Math.abs(k.z)&&(l.z+=k.z)}else c<-this.radius/2&&!this.isGrounded&&(l.x+=-b.x*c,l.y+=-b.y*c,l.z+=-b.z*c);this.position.add(l),this.object.position.copy(this.position)},THREEFIELD.CharacterController.prototype.jump=function(){if(!this.isJumping&&!this.isOnSlope){this.isJumping=!0;var a=this,b=Date.now(),c=1e3;!function d(){var e=Date.now()-b,f=e/c;c>e&&(a.currentJumpPower=Math.cos(Math.min(f,1)*Math.PI),requestAnimationFrame(d))}()}},THREEFIELD.AnimationController=function(a){this.mesh=a,this.action={};var b,c,d;for(b=0,c=this.mesh.geometry.animations.length;c>b;b++)d=this.mesh.geometry.animations[b],THREE.AnimationHandler.add(d),this.action[d.name]={anim:new THREE.Animation(a,d.name,THREE.AnimationHandler.CATMULLROM),duration:1e3*d.length}},THREEFIELD.AnimationController.prototype.play=function(a){var b;for(b in this.action)this.action[b].anim.stop();this.action[a].anim.play()},function(a){function b(a){if(!this.isDisabled){switch(a.keyCode){case d:case e:this.isUp=!0;break;case f:case g:this.isDown=!0;break;case h:case i:this.isLeft=!0;break;case j:case k:this.isRight=!0;break;case l:this.jump()}this.updateAngle(),(this.isUp||this.isDown||this.isLeft||this.isRight)&&(this.isMoveKeyHolded=!0,this.dispatchEvent({type:"movekeyhold"}))}}function c(a){if(!this.isDisabled){switch(a.keyCode){case d:case e:this.isUp=!1;break;case f:case g:this.isDown=!1;break;case h:case i:this.isLeft=!1;break;case j:case k:this.isRight=!1;break;case l:}this.updateAngle(),this.isUp||this.isDown||this.isLeft||this.isRight||a.keyCode!==d&&a.keyCode!==e&&a.keyCode!==f&&a.keyCode!==g&&a.keyCode!==h&&a.keyCode!==i&&a.keyCode!==j&&a.keyCode!==k||this.dispatchEvent({type:"movekeyrelease"})}}var d=87,e=38,f=83,g=40,h=65,i=37,j=68,k=39,l=32;a.KeyInputControl=function(){THREE.EventDispatcher.prototype.apply(this),this.mouseAccelarationX=100,this.mouseAccelarationY=20,this.isDisabled=!1,this.isUp=!1,this.isDown=!1,this.isLeft=!1,this.isRight=!1,this.frontAngle=0,this._mousedownListener=b.bind(this),this._mouseupListener=c.bind(this),window.addEventListener("keydown",this._mousedownListener,!1),window.addEventListener("keyup",this._mouseupListener,!1)},a.KeyInputControl.prototype.jump=function(){this.dispatchEvent({type:"jumpkeypress"})},a.KeyInputControl.prototype.updateAngle=function(){var a=this.isUp,b=this.isDown,c=this.isLeft,d=this.isRight;!a||c||b||d?a&&c&&!b&&!d?this.frontAngle=45:a||!c||b||d?!a&&c&&b&&!d?this.frontAngle=135:a||c||!b||d?!a&&!c&&b&&d?this.frontAngle=225:a||c||b||!d?a&&!c&&!b&&d&&(this.frontAngle=315):this.frontAngle=270:this.frontAngle=180:this.frontAngle=90:this.frontAngle=0},a.KeyInputControl.prototype.getFrontAngle=function(){return this.frontAngle}}(THREEFIELD),function(a){function b(a){if(0===a.rigidObjects.length)return a.radius;var b=new THREE.Vector3(a.camera.position.x-a._center.x,a.camera.position.y-a._center.y,a.camera.position.z-a._center.z).normalize(),c=new THREE.Raycaster(a._center,b,a.minRadius,a.radius),d=c.intersectObjects(a.rigidObjects);return d.length>=1?d[0].distance:a.radius}function c(a){this.dispatchEvent({type:"mousedown"}),this._pointerStart.x=a.clientX,this._pointerStart.y=a.clientY,this._pointerLast.x=this.lon,this._pointerLast.y=this.lat,this.el.removeEventListener("mousemove",this._mousedragListener,!1),this.el.addEventListener("mousemove",this._mousedragListener,!1)}function d(){this.dispatchEvent({type:"mouseup"}),this.el.removeEventListener("mousemove",this._mousedragListener,!1)}function e(a){var b=this.el.offsetWidth,c=this.el.offsetHeight,d=(this._pointerStart.x-a.clientX)/b*2,e=(this._pointerStart.y-a.clientY)/c*2;this.lon=this._pointerLast.x+d*this.mouseAccelerationX,this.lat=this._pointerLast.y+e*this.mouseAccelerationY}function f(a){a.preventDefault(),a.wheelDeltaY?this.radius-=.05*a.wheelDeltaY/5:a.wheelDelta?this.radius-=.05*a.wheelDelta/5:a.detail&&(this.radius+=a.detail/5),this.radius=Math.max(this.radius,this.minRadius),this.radius=Math.min(this.radius,this.maxRadius),this.update()}var g=new THREE.Vector3;a.GyroscopeCameraControl=function(a,b,g){THREE.EventDispatcher.prototype.apply(this),this.camera=a,this.trackObject=b,this.el=g&&g.el||window,this.offset=g&&g.offset||new THREE.Vector3(0,0,0),this.radius=g&&g.radius||10,this.minRadius=g&&g.minRadius||1,this.maxRadius=g&&g.maxRadius||30,this.rigidObjects=g&&g.rigidObjects||[],this.lat=0,this.lon=0,this._phi,this._theta,this.mouseAccelerationX=g&&void 0!==g.mouseAccelerationX?g.mouseAccelerationX:100,this.mouseAccelerationY=g&&void 0!==g.mouseAccelerationY?g.mouseAccelerationY:30,this._pointerStart={x:0,y:0},this._pointerLast={x:0,y:0},this.camera.position.set(this.trackObject.position.x+this.offset.x,this.trackObject.position.y+this.offset.y,this.trackObject.position.z+this.offset.z+1),this.update(),this._mousedownListener=c.bind(this),this._mouseupListener=d.bind(this),this._mousedragListener=e.bind(this),this._scrollListener=f.bind(this),this.el.addEventListener("mousedown",this._mousedownListener,!1),this.el.addEventListener("mouseup",this._mouseupListener,!1),this.el.addEventListener("mousewheel",this._scrollListener,!1),this.el.addEventListener("DOMMouseScroll",this._scrollListener,!1)},a.GyroscopeCameraControl.prototype.update=function(){this.lat=this.lat>90?90:this.lat<-90?-90:this.lat,this.lon=this.lon<0?360+this.lon%360:this.lon%360,this._phi=THREE.Math.degToRad(this.lat),this._theta=-THREE.Math.degToRad(this.lon-90),this._center=new THREE.Vector3(this.trackObject.matrixWorld.elements[12]+this.offset.x,this.trackObject.matrixWorld.elements[13]+this.offset.y,this.trackObject.matrixWorld.elements[14]+this.offset.z);var a=b(this),c=new THREE.Vector3(Math.cos(this._phi)*Math.cos(this._theta),Math.sin(this._phi),Math.cos(this._phi)*Math.sin(this._theta)).multiplyScalar(a);c=g.addVectors(c,this._center),this.camera.position.copy(c),90===this.lat?this.camera.up.set(Math.cos(this._theta+THREE.Math.degToRad(180)),0,Math.sin(this._theta+THREE.Math.degToRad(180))):-90===this.lat?this.camera.up.set(Math.cos(this._theta),0,Math.sin(this._theta)):this.camera.up.set(0,1,0),this.camera.lookAt(this._center),this.dispatchEvent({type:"updated"})},a.GyroscopeCameraControl.prototype.getFrontAngle=function(){return 360-this.lon}}(THREEFIELD);